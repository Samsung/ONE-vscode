/*
 * Copyright (c) 2023 Samsung Electronics Co., Ltd. All Rights Reserved
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import * as vscode from "vscode";

import { Locator, LocatorRunner } from "../ArtifactLocator";
import { ConfigSetting } from "../ConfigSetting";

export type OneCfg = {
  "one-import-tflite": CfgOneImportTflite;
  "one-import-onnx": CfgOneImportOnnx;
  "one-import-tf": CfgOneImportTf;
};

// TODO Update
type CfgOneImportTflite = any;
type CfgOneImportOnnx = any;
type CfgOneImportTf = any;

/**
 * @brief A class for loading ConfigObject logic of ONE Backend.
 */
export class OneConfigSetting extends ConfigSetting {
  /**
   * On ONE Backend, this method does nothing.
   * @returns void
   */
  public updateOutPath(): void {
    return;
  }

  protected _initBaseModelsLocatorRunner() {
    let locatorRunner = new LocatorRunner();

    locatorRunner.register({
      artifactAttr: {
        ext: ".tflite",
        icon: new vscode.ThemeIcon("symbol-variable"),
      },
      locator: new Locator((value: string) => {
        return LocatorRunner.searchWithExt(".tflite", value);
      }),
    });

    locatorRunner.register({
      artifactAttr: {
        ext: ".pb",
        icon: new vscode.ThemeIcon("symbol-variable"),
      },
      locator: new Locator((value: string) =>
        LocatorRunner.searchWithExt(".pb", value)
      ),
    });

    locatorRunner.register({
      artifactAttr: {
        ext: ".onnx",
        icon: new vscode.ThemeIcon("symbol-variable"),
      },
      locator: new Locator((value: string) =>
        LocatorRunner.searchWithExt(".onnx", value)
      ),
    });

    this.baseModelsLocatorRunner = locatorRunner;
  }

  protected _initProductsLocatorRunner() {
    let locatorRunner = new LocatorRunner();

    /**
     * ABOUT ORDERING
     *
     * The registration order determines the order in the tree view
     */

    locatorRunner.register({
      artifactAttr: {
        ext: ".circle",
        icon: new vscode.ThemeIcon("symbol-variable"),
        openViewType: "one.viewer.circle",
      },
      locator: new Locator((value: string) =>
        LocatorRunner.searchWithExt(".circle", value)
      ),
    });

    locatorRunner.register({
      artifactAttr: {
        ext: ".tvn",
        icon: new vscode.ThemeIcon("symbol-variable"),
      },
      locator: new Locator((value: string) =>
        LocatorRunner.searchWithExt(".tvn", value)
      ),
    });

    locatorRunner.register({
      artifactAttr: {
        ext: ".tracealloc.json",
        icon: new vscode.ThemeIcon("graph"),
        openViewType: "one.viewer.mondrian",
        canHide: true,
      },
      locator: new Locator((value: string) => {
        return LocatorRunner.searchWithExt(".tvn", value).map((filepath) =>
          filepath.replace(".tvn", ".tracealloc.json")
        );
      }),
    });

    // NOTE
    // Shows <model>.trace.json
    // REQUIRES: <model>.tvn be written in the config file.
    // This rule is added to show a trace.json file generated by `one.toolchain.profileModel` command.
    locatorRunner.register({
      artifactAttr: {
        ext: ".trace.json",
        icon: new vscode.ThemeIcon("graph"),
        openViewType: "one.editor.jsonTracer",
        canHide: true,
      },
      locator: new Locator((value: string) => {
        return LocatorRunner.searchWithExt(".tvn", value).map((filepath) =>
          filepath.replace(".tvn", ".trace.json")
        );
      }),
    });

    locatorRunner.register({
      artifactAttr: {
        ext: ".json",
        icon: new vscode.ThemeIcon("graph"),
        openViewType: "one.editor.jsonTracer",
        canHide: true,
      },
      locator: new Locator(
        (value: string) => {
          return LocatorRunner.searchWithCommandOption(
            value,
            "--save-chrome-trace",
            ".json"
          );
        },
        "one-profile",
        "command"
      ),
    });

    locatorRunner.register({
      artifactAttr: {
        ext: ".tv2m",
        icon: new vscode.ThemeIcon("symbol-method"),
        canHide: true,
      },
      locator: new Locator((value: string) => {
        return LocatorRunner.searchWithExt(".tvn", value).map((filepath) =>
          filepath.replace(".tvn", ".tv2m")
        );
      }),
    });

    locatorRunner.register({
      artifactAttr: {
        ext: ".tv2o",
        icon: new vscode.ThemeIcon("symbol-method"),
        canHide: true,
      },
      locator: new Locator((value: string) => {
        return LocatorRunner.searchWithExt(".tvn", value).map((filepath) =>
          filepath.replace(".tvn", ".tv2o")
        );
      }),
    });

    locatorRunner.register({
      artifactAttr: {
        ext: ".tv2w",
        icon: new vscode.ThemeIcon("symbol-method"),
        canHide: true,
      },
      locator: new Locator((value: string) => {
        return LocatorRunner.searchWithExt(".tvn", value).map((filepath) =>
          filepath.replace(".tvn", ".tv2w")
        );
      }),
    });

    locatorRunner.register({
      // 'default' view type is 'text editor' (vscode.openWith)
      artifactAttr: {
        ext: ".circle.log",
        openViewType: "default",
        icon: vscode.ThemeIcon.File,
        canHide: true,
      },
      locator: new Locator((value: string) => {
        return LocatorRunner.searchWithExt(".circle", value).map((filepath) =>
          filepath.replace(".circle", ".circle.log")
        );
      }),
    });

    /**
     * When you add a new product type, please append the ext type to
     * OneTreeDataProvider.fileWatcher too, to prevent a bug.
     *
     * TODO Provide better structure to remove this extra work
     */

    this.productsLocatorRunner = locatorRunner;
  }
}
