// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class SelectV2Options {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SelectV2Options {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSelectV2Options(bb:flatbuffers.ByteBuffer, obj?:SelectV2Options):SelectV2Options {
  return (obj || new SelectV2Options()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSelectV2Options(bb:flatbuffers.ByteBuffer, obj?:SelectV2Options):SelectV2Options {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SelectV2Options()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static startSelectV2Options(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSelectV2Options(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSelectV2Options(builder:flatbuffers.Builder):flatbuffers.Offset {
  SelectV2Options.startSelectV2Options(builder);
  return SelectV2Options.endSelectV2Options(builder);
}

unpack(): SelectV2OptionsT {
  return new SelectV2OptionsT();
}


unpackTo(_o: SelectV2OptionsT): void {}
}

export class SelectV2OptionsT {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SelectV2Options.createSelectV2Options(builder);
}
}
