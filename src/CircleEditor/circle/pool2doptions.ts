// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { ActivationFunctionType } from '../circle/activation-function-type';
import { Padding } from '../circle/padding';


export class Pool2DOptions {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Pool2DOptions {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsPool2DOptions(bb:flatbuffers.ByteBuffer, obj?:Pool2DOptions):Pool2DOptions {
  return (obj || new Pool2DOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsPool2DOptions(bb:flatbuffers.ByteBuffer, obj?:Pool2DOptions):Pool2DOptions {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Pool2DOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

padding():Padding {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : Padding.SAME;
}

strideW():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

strideH():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

filterWidth():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

filterHeight():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

fusedActivationFunction():ActivationFunctionType {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : ActivationFunctionType.NONE;
}

static startPool2DOptions(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addPadding(builder:flatbuffers.Builder, padding:Padding) {
  builder.addFieldInt8(0, padding, Padding.SAME);
}

static addStrideW(builder:flatbuffers.Builder, strideW:number) {
  builder.addFieldInt32(1, strideW, 0);
}

static addStrideH(builder:flatbuffers.Builder, strideH:number) {
  builder.addFieldInt32(2, strideH, 0);
}

static addFilterWidth(builder:flatbuffers.Builder, filterWidth:number) {
  builder.addFieldInt32(3, filterWidth, 0);
}

static addFilterHeight(builder:flatbuffers.Builder, filterHeight:number) {
  builder.addFieldInt32(4, filterHeight, 0);
}

static addFusedActivationFunction(builder:flatbuffers.Builder, fusedActivationFunction:ActivationFunctionType) {
  builder.addFieldInt8(5, fusedActivationFunction, ActivationFunctionType.NONE);
}

static endPool2DOptions(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createPool2DOptions(builder:flatbuffers.Builder, padding:Padding, strideW:number, strideH:number, filterWidth:number, filterHeight:number, fusedActivationFunction:ActivationFunctionType):flatbuffers.Offset {
  Pool2DOptions.startPool2DOptions(builder);
  Pool2DOptions.addPadding(builder, padding);
  Pool2DOptions.addStrideW(builder, strideW);
  Pool2DOptions.addStrideH(builder, strideH);
  Pool2DOptions.addFilterWidth(builder, filterWidth);
  Pool2DOptions.addFilterHeight(builder, filterHeight);
  Pool2DOptions.addFusedActivationFunction(builder, fusedActivationFunction);
  return Pool2DOptions.endPool2DOptions(builder);
}

unpack(): Pool2DOptionsT {
  return new Pool2DOptionsT(
    this.padding(),
    this.strideW(),
    this.strideH(),
    this.filterWidth(),
    this.filterHeight(),
    this.fusedActivationFunction()
  );
}


unpackTo(_o: Pool2DOptionsT): void {
  _o.padding = this.padding();
  _o.strideW = this.strideW();
  _o.strideH = this.strideH();
  _o.filterWidth = this.filterWidth();
  _o.filterHeight = this.filterHeight();
  _o.fusedActivationFunction = this.fusedActivationFunction();
}
}

export class Pool2DOptionsT {
constructor(
  public padding: Padding = Padding.SAME,
  public strideW: number = 0,
  public strideH: number = 0,
  public filterWidth: number = 0,
  public filterHeight: number = 0,
  public fusedActivationFunction: ActivationFunctionType = ActivationFunctionType.NONE
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return Pool2DOptions.createPool2DOptions(builder,
    this.padding,
    this.strideW,
    this.strideH,
    this.filterWidth,
    this.filterHeight,
    this.fusedActivationFunction
  );
}
}
