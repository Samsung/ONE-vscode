// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { ActivationFunctionType } from '../circle/activation-function-type';


export class L2NormOptions {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):L2NormOptions {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsL2NormOptions(bb:flatbuffers.ByteBuffer, obj?:L2NormOptions):L2NormOptions {
  return (obj || new L2NormOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsL2NormOptions(bb:flatbuffers.ByteBuffer, obj?:L2NormOptions):L2NormOptions {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new L2NormOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

fusedActivationFunction():ActivationFunctionType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : ActivationFunctionType.NONE;
}

static startL2NormOptions(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addFusedActivationFunction(builder:flatbuffers.Builder, fusedActivationFunction:ActivationFunctionType) {
  builder.addFieldInt8(0, fusedActivationFunction, ActivationFunctionType.NONE);
}

static endL2NormOptions(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createL2NormOptions(builder:flatbuffers.Builder, fusedActivationFunction:ActivationFunctionType):flatbuffers.Offset {
  L2NormOptions.startL2NormOptions(builder);
  L2NormOptions.addFusedActivationFunction(builder, fusedActivationFunction);
  return L2NormOptions.endL2NormOptions(builder);
}

unpack(): L2NormOptionsT {
  return new L2NormOptionsT(
    this.fusedActivationFunction()
  );
}


unpackTo(_o: L2NormOptionsT): void {
  _o.fusedActivationFunction = this.fusedActivationFunction();
}
}

export class L2NormOptionsT {
constructor(
  public fusedActivationFunction: ActivationFunctionType = ActivationFunctionType.NONE
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return L2NormOptions.createL2NormOptions(builder,
    this.fusedActivationFunction
  );
}
}
