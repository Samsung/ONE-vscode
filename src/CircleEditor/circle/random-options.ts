// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class RandomOptions {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):RandomOptions {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsRandomOptions(bb:flatbuffers.ByteBuffer, obj?:RandomOptions):RandomOptions {
  return (obj || new RandomOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsRandomOptions(bb:flatbuffers.ByteBuffer, obj?:RandomOptions):RandomOptions {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new RandomOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

seed():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

seed2():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startRandomOptions(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addSeed(builder:flatbuffers.Builder, seed:number) {
  builder.addFieldInt32(0, seed, 0);
}

static addSeed2(builder:flatbuffers.Builder, seed2:number) {
  builder.addFieldInt32(1, seed2, 0);
}

static endRandomOptions(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createRandomOptions(builder:flatbuffers.Builder, seed:number, seed2:number):flatbuffers.Offset {
  RandomOptions.startRandomOptions(builder);
  RandomOptions.addSeed(builder, seed);
  RandomOptions.addSeed2(builder, seed2);
  return RandomOptions.endRandomOptions(builder);
}

unpack(): RandomOptionsT {
  return new RandomOptionsT(
    this.seed(),
    this.seed2()
  );
}


unpackTo(_o: RandomOptionsT): void {
  _o.seed = this.seed();
  _o.seed2 = this.seed2();
}
}

export class RandomOptionsT {
constructor(
  public seed: number = 0,
  public seed2: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return RandomOptions.createRandomOptions(builder,
    this.seed,
    this.seed2
  );
}
}
