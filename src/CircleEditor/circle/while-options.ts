// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class WhileOptions {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):WhileOptions {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsWhileOptions(bb:flatbuffers.ByteBuffer, obj?:WhileOptions):WhileOptions {
  return (obj || new WhileOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsWhileOptions(bb:flatbuffers.ByteBuffer, obj?:WhileOptions):WhileOptions {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new WhileOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

condSubgraphIndex():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

bodySubgraphIndex():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startWhileOptions(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addCondSubgraphIndex(builder:flatbuffers.Builder, condSubgraphIndex:number) {
  builder.addFieldInt32(0, condSubgraphIndex, 0);
}

static addBodySubgraphIndex(builder:flatbuffers.Builder, bodySubgraphIndex:number) {
  builder.addFieldInt32(1, bodySubgraphIndex, 0);
}

static endWhileOptions(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createWhileOptions(builder:flatbuffers.Builder, condSubgraphIndex:number, bodySubgraphIndex:number):flatbuffers.Offset {
  WhileOptions.startWhileOptions(builder);
  WhileOptions.addCondSubgraphIndex(builder, condSubgraphIndex);
  WhileOptions.addBodySubgraphIndex(builder, bodySubgraphIndex);
  return WhileOptions.endWhileOptions(builder);
}

unpack(): WhileOptionsT {
  return new WhileOptionsT(
    this.condSubgraphIndex(),
    this.bodySubgraphIndex()
  );
}


unpackTo(_o: WhileOptionsT): void {
  _o.condSubgraphIndex = this.condSubgraphIndex();
  _o.bodySubgraphIndex = this.bodySubgraphIndex();
}
}

export class WhileOptionsT {
constructor(
  public condSubgraphIndex: number = 0,
  public bodySubgraphIndex: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return WhileOptions.createWhileOptions(builder,
    this.condSubgraphIndex,
    this.bodySubgraphIndex
  );
}
}
