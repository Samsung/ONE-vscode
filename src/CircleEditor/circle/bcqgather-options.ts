// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class BCQGatherOptions {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):BCQGatherOptions {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsBCQGatherOptions(bb:flatbuffers.ByteBuffer, obj?:BCQGatherOptions):BCQGatherOptions {
  return (obj || new BCQGatherOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsBCQGatherOptions(bb:flatbuffers.ByteBuffer, obj?:BCQGatherOptions):BCQGatherOptions {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new BCQGatherOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

inputHiddenSize():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

axis():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startBCQGatherOptions(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addInputHiddenSize(builder:flatbuffers.Builder, inputHiddenSize:number) {
  builder.addFieldInt32(0, inputHiddenSize, 0);
}

static addAxis(builder:flatbuffers.Builder, axis:number) {
  builder.addFieldInt32(1, axis, 0);
}

static endBCQGatherOptions(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createBCQGatherOptions(builder:flatbuffers.Builder, inputHiddenSize:number, axis:number):flatbuffers.Offset {
  BCQGatherOptions.startBCQGatherOptions(builder);
  BCQGatherOptions.addInputHiddenSize(builder, inputHiddenSize);
  BCQGatherOptions.addAxis(builder, axis);
  return BCQGatherOptions.endBCQGatherOptions(builder);
}

unpack(): BCQGatherOptionsT {
  return new BCQGatherOptionsT(
    this.inputHiddenSize(),
    this.axis()
  );
}


unpackTo(_o: BCQGatherOptionsT): void {
  _o.inputHiddenSize = this.inputHiddenSize();
  _o.axis = this.axis();
}
}

export class BCQGatherOptionsT {
constructor(
  public inputHiddenSize: number = 0,
  public axis: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return BCQGatherOptions.createBCQGatherOptions(builder,
    this.inputHiddenSize,
    this.axis
  );
}
}
