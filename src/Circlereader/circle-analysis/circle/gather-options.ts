// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class GatherOptions {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i: number, bb: flatbuffers.ByteBuffer): GatherOptions {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  static getRootAsGatherOptions(bb: flatbuffers.ByteBuffer, obj?: GatherOptions): GatherOptions {
    return (obj || new GatherOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  static getSizePrefixedRootAsGatherOptions(bb: flatbuffers.ByteBuffer, obj?: GatherOptions):
      GatherOptions {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new GatherOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  axis(): number {
    const offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
  }

  static startGatherOptions(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  static addAxis(builder: flatbuffers.Builder, axis: number) {
    builder.addFieldInt32(0, axis, 0);
  }

  static endGatherOptions(builder: flatbuffers.Builder): flatbuffers.Offset {
    const offset = builder.endObject();
    return offset;
  }

  static createGatherOptions(builder: flatbuffers.Builder, axis: number): flatbuffers.Offset {
    GatherOptions.startGatherOptions(builder);
    GatherOptions.addAxis(builder, axis);
    return GatherOptions.endGatherOptions(builder);
  }
}
